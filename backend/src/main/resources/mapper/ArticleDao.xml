<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.freedy.backend.dao.ArticleDao">

    <resultMap id="ArticleInfoMap" type="com.freedy.backend.entity.vo.article.ArticleInfoVo" autoMapping="true">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="articleStatus" column="article_status"/>
        <result property="articleCategory" column="category_name"/>
        <result property="wordNum" column="word_num"/>
        <result property="articleDesc" column="article_desc"/>
        <result property="visitNum" column="visit_num"/>
        <result property="commentNum" column="comment_num"/>
        <result property="likeNum" column="like_num"/>
        <result property="authorName" column="nickname"/>
        <result property="updateTime" column="update_time"/>
        <result property="articlePoster" column="article_poster"/>
        <collection property="articleTags" javaType="list" ofType="string">
            <result column="tag_name"/>
        </collection>
    </resultMap>

    <resultMap id="EsModelMap" type="com.freedy.backend.middleWare.es.model.ArticleEsModel" autoMapping="true">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="articleStatus" column="article_status"/>
        <result property="articleCategory" column="category_name"/>
        <result property="wordNum" column="word_num"/>
        <result property="articleComment" column="article_comment"/>
        <result property="articleDesc" column="article_desc"/>
        <result property="visitNum" column="visit_num"/>
        <result property="likeNum" column="like_num"/>
        <result property="authorName" column="nickname"/>
        <result property="content" column="content"/>
        <result property="publishTime" column="publish_time"/>
        <result property="articlePoster" column="article_poster"/>
        <collection property="articleTags" javaType="list" ofType="string">
            <result column="tag_name"/>
        </collection>
    </resultMap>

    <insert id="addCommentNum">
        update blog_article set comment_num=comment_num+1 where id=#{articleId}
    </insert>

    <insert id="insertWithId">
        INSERT INTO blog_article  (id, title, article_desc, author_id,  content, word_num, article_status, article_comment, article_category_id, create_time, update_time, publish_time )  VALUES
        (#{id},#{title},#{articleDesc},#{authorId},#{content},#{wordNum},#{articleStatus},#{articleComment},#{articleCategoryId},#{createTime},#{updateTime},#{publishTime})
    </insert>

    <update id="updateArticleStatus">
        update blog_db.blog_article set blog_db.blog_article.article_status = #{articleStatus} where id = #{id}
    </update>

    <update id="likeArticle">
        update blog_db.blog_article set like_num = like_num+1 where id=#{id}
    </update>

    <update id="updateParameter">
        update blog_db.blog_article set ${field}= case id
        <foreach collection="map.entrySet()" index="key" item="value">
            when #{key} then ${field}+#{value}
        </foreach>
        end
        where id in
        <foreach collection="map.entrySet()" index="key" separator="," open="(" close=")">
            #{key}
        </foreach>
    </update>

    <update id="updateComment">
        update blog_db.blog_article set comment_num= case id
        <foreach collection="map.entrySet()" index="key" item="value">
            when #{key} then #{value}
        </foreach>
        end
        where id in
        <foreach collection="map.entrySet()" index="key" separator="," open="(" close=")">
            #{key}
        </foreach>
    </update>

    <select id="queryArticleList"
            resultMap="ArticleInfoMap"
            parameterType="com.freedy.backend.utils.PageUtils">
        <bind name="key_offset" value="(currPage-1)*pageSize"></bind>
        select article.id,article.title,article.article_status,category.category_name,article.word_num,
        article.article_desc,article.comment_num,article.visit_num,article.like_num,
        manager.nickname,article.publish_time,article.update_time,article.article_poster,tag.tag_name
        from (select * from blog_article order by article_status desc,create_time desc limit #{key_offset},#{pageSize})as article
        left join blog_category as category on article.article_category_id=category.id
        left join blog_article_tag_relation relation on article.id = relation.article_id
        left join blog_tag tag on tag.id = relation.tag_id
        left join blog_manager manager on article.author_id=manager.id
        where article.id != 1
    </select>

    <select id="getCount" resultType="java.lang.Long">
        select count(*)
        from blog_article;
    </select>

    <select id="getTotalVisit" resultType="java.lang.Long">
        select sum(visit_num)
        from blog_article
        where author_id = #{authorId}
    </select>

    <select id="getTotalVisitNum" resultType="java.lang.Long">
        select sum(visit_num) from blog_db.blog_article
    </select>

    <select id="getTotalComment" resultType="java.lang.Long">
        select sum(comment_num)
        from blog_article
        where author_id = #{authorId}
    </select>

    <select id="getEsModel" resultMap="EsModelMap">
        select article.id,
               article.title,
               article.article_status,
               category.category_name,
               article.article_desc,
               article.visit_num,
               article.like_num,
               article.word_num,
               article.article_comment,
               manager.nickname,
               article.publish_time,
               article.content,
               tag.tag_name,
               article.article_poster
        from (select * from blog_article where id=#{id})as article
        left join blog_category as category on article.article_category_id=category.id
        left join blog_article_tag_relation relation on article.id = relation.article_id
        left join blog_tag tag on tag.id = relation.tag_id
        left join blog_manager manager on article.author_id=manager.id
    </select>

    <select id="getEsArticleList" resultMap="EsModelMap">
        <bind name="key_offset" value="(page-1)*limit"></bind>
        select article.id,
        article.title,
        article.article_status,
        category.category_name,
        article.article_desc,
        article.visit_num,
        article.like_num,
        article.word_num,
        manager.nickname,
        article.publish_time,
        article.content,
        article.article_comment,
        tag.tag_name,
        article.article_poster
        from (select * from blog_article limit #{key_offset},#{limit})as article
        left join blog_category as category on article.article_category_id=category.id
        left join blog_article_tag_relation relation on article.id = relation.article_id
        left join blog_tag tag on tag.id = relation.tag_id
        left join blog_manager manager on article.author_id=manager.id
    </select>

    <select id="getTitles" resultType="com.freedy.backend.entity.vo.comment.CommentAdminVo$Article">
        select id,title from blog_db.blog_article where id in
        (
         <foreach collection="list" item="item" separator=",">
            #{item}
         </foreach>
         )
    </select>

    <select id="getAllArticleTitleAndCategoryId" resultType="com.freedy.backend.entity.ArticleEntity">
        select title,article_category_id,like_num,visit_num,comment_num from blog_db.blog_article
    </select>

    <select id="getCreatorEmailByArticleId" resultType="java.lang.String">
        select manager.email from blog_db.blog_article as article
        left join blog_db.blog_manager as manager on article.author_id=manager.id
        where article.id=#{id}
    </select>


</mapper>